#include<bits/stdc++.h>
/*

*/namespace __DEBUG_UTIL__{/*####################---++++++++++++++++++++++++++++++++++++---------....................................................*/using namespace std; void print/*###############
*/(const char *x) {cerr<<x;}void print/*######---+++++++++++++++++++++++++++++++++++++++---------...........--.........................................*/(bool x) {cerr<<(x?"T":"F");}void print/*#####
*/(char x) {cerr<<'\''<<x<<'\'';}/*########+++++++++++++++++++++++++++++++++++++++++++++--------..........----...........................................*/void print/*################################
*/(signed short int x) {cerr << x;}/*###++++++++++++++++++++++++++++++++++++++++++++++++-------...........---..................................................*/void print/*##########################
*//*################################-----++++++++++++++++++++++++++++++++++++++++++++---------...................................................................*//*##################################
*//*##############################--------+++++++++++++++++++++++++++++++++++++++++++--------...................................................--...---..........*//*#################################
*//*############################---------+++++++++++++++++++++++++++++++++++++++++++++-------..................................................-++++++++--...........*//*##############################
*//*###########################---------+++++++++++++++++++++++++++++++++++++++++++++-------..................................................-++*//*###++--...........*//*############################
*//*##########################---------+++++++++++++++++++++++++++++++++++++++++++++++-----...................................................-++*//*#####++-..........-*//*###########################
*//*########################----------++++++++++++++++++++++++++++++++++++++++++++++++-----...................................................--+*//*#######+--........--*//*##########################
*//*########################---------+++++++++++++++++++++++++++++++++++++++++++++++++----.....................................................--+*//*#######+--........--*//*#########################
*//*######################----------++++++++++++++++++++++++++++++++++++++++++++++++-----.......................................................--++*//*######++-........--*//*########################
*//*######################---------++++++++++++++++++++++++++++++++++++++++++++++++------.........................................................--++*//*#####+--.........-*//*#######################
*//*#####################-++++++++++++++++++++++++++++++++++++++++++++++++++++++-+-------...........................................................--++*//*####+--........--*//*######################
*//*####################-+++###+++++++++++++++++++++++++++++++++++++++++++++++++-+--------............................................................--++*//*##++-..........*//*######################
*//*####################+++####+++++++++++++++++++++++++++++++++++++++++++++++++++---------..............................................................-++####++-.........---*//*####################
*//*#####################+#####+++++++++++++++++++++++++++++++++++++++++++++++++++--++++----..............................................................--+++#++--..........--*//*###################
*//*##########################++++++++++++++++++++++++++++++++++++++++++++++++++++-----------...............................................................--++++-...........----*//*#################
*//*#########################+++++++++++++++++++++++++++++++++++++++++++++++++++++-------------...............................................................-----............----+*//*###############
*//*########################++++++++++++++++++++++++++++++++++++++++++++++++++++----------------.................................................................--...............---*//*##############
*//*#######################+++++++++++++++++++++++++++++++++++++++++++++++++++++------------------...................................................................................---*//*###########
*//*######################++++++++++++++++++++++++++++++++++++++++++++++++++++++--------------------..................................................................................---*//*##########
*//*#####################+++++++++++++++++++++++++++++++++++++++++++++++++++++------------------------..................................................................................--*//*#########
*//*#####################+++++++++++++++++++++++++++++++++++++++++++++++++++++--------------------------..................................................................................--*//*#######
*//*#################+++++++++++++++++++++++++++++++++++++++++++++++++++++++++----------------------------..................................................................................*//*#######
*//*###############+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++------------------------------................................................................................--*//*#####
*//*##############+++++++++++++++++++++++++++++++++++++++++++++++++++++++-------------------------------------................................................................................-*//*####
*//*#############++++++++++++++++++++++++++++++++++++++++++++++++++++++------------------------------------------.............................................................................--*//*###
*//*############++++++++++++++++++++++++++++++++++++++++++++++++++++++---------------------------------------------.............................................................................-*//*##
*//*###########+++++++++++++++++++++++++++++++++++++++++++++++++++++----------------------------........--------------..........................................................................--#####
*//*##########+++++++++++++++++++++++++++++++++++++++++++++++++++-------------------------------............------------....................................................--...................---###
*//*#########++++++++++++++++++++++++++++++++++++++++++++++++++---------------------------------..............------------....................................................-...................--###
*//*#########+++++++++++++++++++++++++++++++++++++++++++++++--------.-----------------------------...####.......-------------.................................................--...................---#
*//*########+++++++++++++++++++++++++++++++++++++++++++++++-------..------------------------------.....#..........-------------................................................-....................---
*//*#######++++++++++++++++++++++++++++++++++++++++++++++-----....--.------------------------------..............-----------------...................................................................--
*//*#######+++++++++++++++++++++++++++++++++++++++++++----------------------------------------------.......------------------------...................................................................-
*//*######++++++++++++++++++++++++++++++++++++++++++-------------------------------------------------....-----------------.-----------.................................................................
*//*######++++++++++++++++++++++++++++++++++++++----------------------------------------------------.....------------------......------................................................................
*//*######++++++++++++++++++++++++++++++++++++-----------------------------------------------------------------------------............................................................................
*//*#####+++++++++++++++++++++++++++++++++++--------------------------------------------------------------------------------..----.....................................................................
*//*#####++++++++++++++++++++++++++++++++++----.----------------------------------------------------------------...---....................####.........................................................
*//*#####++++++++++++++++++++++++++++++++-----------------------------------------------------------.......................................####........................................................
*//*####+++++++++++++++++++++++++++++++--------------------------------------------------------.................................................................................--.....................
*//*####++++++++++++++++++++++++++++-----------------------------------------------------------...............................................................................----.....................
*//*###++++++++++++++++++++++++++-----------------------------------------------------......................................................................................------.....................
*//*###++++++++++++++++++++++++------------------------------------------------------...........................................................................------....--------.....................
*//*###+++++++++++++++++++++++-------------------------------------------------------.............................................................................----------------.....................
*//*###++++++++++++++++++++---------------------------------------------------........................................................................................------------.....................
*//*###+++++++++++++++++++----------------------------------------------------.............................................................................................-------.....................
*//*###++++++++++++++++++-----------------------------------------------------..............................................................................................------.....................
*//*###++++++++++++++++++-----------------------------------------------.----.................................................................................................----.....................
*//*###++++++++++++++++++------------------------------------------------..-..................................................................................................---......................
*//*###++++++++++++++++++-----------------------------------------------......................................................................................................--.......................
*//*###+++++++++++++++++----------------------------------------------........................................................................................................--.......................
*//*###+++++++++++++++++----------------------------------------------.....................................................---................................................--.......................
*//*###++++++++++++++++-----------------------------------------------..............................................--++++++++++++---........................................----......................
*//*###++++++++++++++----------------------------------------+++++---............................................--++++++++++++++++++++-......................................-----....................
*//*###+++++++++++++-----------------------------------++*//*#######++--........................................-+++-----+++++++---++++++--...................................------...................
*//*###++++++++++++---------------------------------+++####++++++++++++++-.....................................------....--+++++++-----++++--..................................------..................
*//*###++++++++++---------------------------------++++++++-----+++++#+++--.........................................---....-+++++++++--.---+++-..................................-----..................
*//*###++++++++++-------------------------------+++#++--------..--+++++++-........................................--+-----+++++++++++-....-----...................................----.................
*//*###++++++++--------------------------------+++++---------...--++++++++-.......................................-++++++++++++++++++--.....----...................................---.................
*//*#####++++++-------------------------------++++---....-------+++++++++++-.....................................--+++++++++++++++++++-.......---...................................---................
-...#####+++++---------------------------------+---......--+++++++++++++++++-....................................--+++++++++++++++++++--............................................---................
--...--+##+++------------------------------------........-++++++++++++++++++-....................................-+++++--++++++---------..............................................-................
--....------------------------------------------........--++++++++++++++------...................................--+------++++----------..............................................--...............
---.....--------------------------------------...........-++++----+++++------.....................................---------------------................................................................
+---..........-------------------------------............-------------------.......................................----................................................................................
++--...........-----------------------------..............-----.........................................................................................................................-..............
++--................------------------------...............--...........................................................................................................................-..............
++--...................------------------...............................................................................................................................................-------........
++--..................###..------------.................................................................................................................................................------.........
++--.....................#####----------.................................................................................................................................................---...........
+++-.........................*//*##.----...............................................................................................................................................................
+++-............................*//*####----...........................................................................................................................................................
+++-...---........................*//*#######..........................................................................................................................................................
+++--.---------......................*//*#########....................................-----------......................................................................................................
+++--.---------.........................*//*##########-.............................-----------------..................................................................................................
+++--.---------............................*//*###########...------................--------------------.............................................................................---................
+++--.-------------------------................*//*#########--------..............----------......................................................................................----------...........
+++--.-----------------+++++++-----...............*//*######---------.............-------.....................................................................................----------------.........
+++-------------------------+++++--------............*//*####--------.............------....................................................................................-----####-----------......-
+++-----------------...-----------+++---------......--..#####---------.............---......................................................................................-----##++++-----------.----
+++++--------------------...-----------+++++-----------.....#----------.............-......................................................................-............---..---###++------------------
##+++++++++--------------------------------------------------.---------...................................................................................---........----------------------------------
####+++++++++++++++----------------------------------------------------...................................................................................--.......---------------------------------###
####++++++++#+++++++++-------------------------------------------------...............................................................................----------------------------------------------###
*//*###########++++++++++++---------------------------------------------............................................................................-------------++++---------------------------++#####
*//*##############+++++++++++++++------------------------------------------.......................................................................*//*##---------+++++-------------------------+#+++###
*//*###############+++++++++++++++++++-------------------------------++++--------................................................*//*#####################-----------++---------------------###+++++###
*//*###############++++++++++++++++++++++++++--------------------------++---------.....-------.................-*/(unsigned short int x) {cerr << x;}/*#####--------------------------------+++++++++##
*/void print/*#####++++++++++++++++++-+++++++++-------------------------------................*/(signed int x) {cerr << x;}void print/*########################----####-------------------+--+++++++++-
*//*###############++++++++++++++++++++#####++++----------------------------............*/(unsigned int x) {cerr << x;}void print(signed long int x) {cerr << x;}/*####-------------+++++-----+++++++--
*/void print/*#####++++++++++++++++++++#####++++----------------------------------........-*/(unsigned long int x) {cerr << x;}void print/*############################------------++++++----++++++++--
*//*###############++++++++++++++++++++#####++++------------......------....--------.........*/(signed long long int x) {cerr << x;}void print/*#######################+-----+++++++##+++----++++++++--
*//*###############+++++++++++++++++++++####++++------------....................................*/(unsigned long long int x) {cerr << x;}void print/*#################+++++++++++++###++++-+++++++++++-
*//*###############++++++++++++++++++++++###+++------------........................................*/(float x) {cerr << x;}void print(double x) {cerr << x;}/*#########++++++++++++###++++++++++++++++#
*/void print/*#####+++++++++----+++++++++###+---------------.............--............................*/(long double x) {cerr << x;}void print/*######################----++++++#####+++++++++++++++++
*//*###############+++++++------+++++++++##++----------------...............---..........................*/(string x) {cerr << '\"' << x << '\"';}template <size_t N>/*#+---+++++#####+++++++++++++++++
*/void print/*#####+++++--------++++++++++++++++-------------...............----............................-*/(bitset<N> x) {cerr << x;}void print(vector<bool> v) { /*#---++++*//*##++++++++++++++++-
*/int f = 0;/*#####++++--------+++++++++-------+++++++-------.................------...........................-*/cerr << '{';for (auto &&i : v)cerr/*###################----+++*//*##+++++++++++++++++
*//*###############+++-------++++++++++++++----+++++++-------.................--------.............................*/<< (f++ ? "," : "") << (i ? "T" : "F");/*###########---++++*//*##+++++++++++++++++
*//*##############++++----+++++++++++++++++++++-++++++--------................-----------.............................*/cerr << "}"; } template <typename T>void print/*#----++++#####+++++++++++++++++
*/(T &&x);/*######+++----++++++++++++++++---++++++++++---------...............-------------------.........................*/template <typename T>void print/*############----+++*//*##+++++++++++++++++
*//*##############++++-+++++++++++++++-------+++++++-----------...............----------------------......................--.*/(vector<vector<T>> mat);/*################---++++*//*##+++++++++++++++++
*//*##############+++++++++++++++++++---------++++++-----------...............----+++----------------...........................*//*####################################+++++++*//*###++++++++++++++++#
*//*##############+++++++++++++++++++--------+++++++--++-------..............----++++++-----------------..........................--*//*###############################++++++++*//*###++++++++++++++###
*//*###############++++++++++++++++++--------++++++++-++--------.............---++++++++---------------------.........................*//*#############################++++++++*//*###++++++++++++++++#
*//*##############+++++++++++++++++++---------+++++++-+++-------............---++++++++++-----------------------.......................-.-*//*#########################++++++++*//*####++++++++++++++++
*//*##############++++++++++++++++++++--------++++++++++++-------------....---+++++++++++++------------------------------------.....--....---*//*######################++++++++*//*####++++++++++++++++
*//*##############+++++++++++++++++++++++++---+++#++++++++++++--------------++++++++++++++++-----------------------------------------.--..-...--*//*###################++++++*//*######++++++++++++++++
*//*##############+++++++++++++++++++++++++++-+++#++++++++++####++++------++++++++++++++++++---------------------------------------------.......---*//*################++++++*//*######++++++++++++++++
*//*##############+++++++++++++++++++++++++----++#+++++++++*//*##++++++++++++++++++++++++++++-------------------------------------------------------.-*//*#############++++++*//*######++++++++++++++++
*//*##############+++++++++++++++++++++++++++++++++++++++++*//*#####++++++++++++++++++++++++++------------------------------------------------------...-*//*############+++++*//*######++++++++++++++++
*//*##############+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++------------------------------------------------------------*//*########################++++++++++++++++
*//*###############+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-----------------------------------------++--------------------*//*#######+++*//*######++++++++++++++++
*//*###############++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++------------------------------+++++++++++-----------------------*//*##################++++++++++++++++
*//*################+++++++++++++++++++++++++++++++++++++++++++-----++++++++++++++++++++++++++++++-------------------+++++++++++++++++++++---------------------------*//*##############++++++++++++++++
*/template <typename T, size_t N, size_t M>void print(T (&mat)[N][M]);template <typename F, typename S>void print(pair<F, S> x);template <typename T, size_t N>struct Tuple;template <typename T>/*####
*/struct Tuple<T, 1>;template <typename... Args>void print(tuple<Args...> t);template <typename... T>void print(priority_queue<T...> pq);template <typename T>void print(stack<T> st);/*###############
*/template <typename T>void print(queue<T> q); template <typename T>void print(T &&x) { int f = 0;cerr << '{';for (auto &&i : x)cerr << (f++ ? "," : ""), print(i);cerr << "}"; }/*####################
*/template <typename T>void print(vector<vector<T>> mat) {int f = 0;cerr << "\n~~~~~\n";for (auto &&i : mat) {cerr << setw(2) << left << f++, print(i), cerr << "\n"; }cerr << "~~~~~\n"; }/*##########
*/template <typename T, size_t N, size_t M>void print(T (&mat)[N][M]) {int f = 0;cerr << "\n~~~~~\n";for (auto &&i : mat) {cerr << setw(2) << left << f++, print(i), cerr << "\n"; }/*#################
*/cerr << "~~~~~\n"; }template <typename F, typename S>void print(pair<F, S> x) {cerr << '(';print(x.first);cerr << ',';print(x.second);cerr << ')'; }template <typename T, size_t N>struct Tuple{/*###
*/static void printTuple(T t) {Tuple<T, N - 1>::printTuple(t);cerr << ",", print(get<N - 1>(t)); } };template <typename T>struct Tuple<T, 1> {static void printTuple(T t) { print(get<0>(t)); } };/*###
*/template <typename... Args>void print(tuple<Args...> t) {cerr << "(";Tuple<decltype(t),sizeof...(Args)>::printTuple(t);cerr << ")"; }template <typename... T>void print(priority_queue<T...> pq) {/*#
*/int f = 0;cerr << '{';while (!pq.empty())cerr << (f++ ? "," : ""),print(pq.top()), pq.pop();cerr << "}"; }template <typename T>void print(stack<T> st) {int f = 0;cerr << '{';while (!st.empty())/*##
*/cerr << (f++ ? "," : ""),print(st.top()), st.pop();cerr << "}"; }template <typename T>void print(queue<T> q) {int f = 0;cerr << '{';while (!q.empty())cerr << (f++ ? "," : ""),print/*###############
*/(q.front()), q.pop();cerr << "}"; }void printer(const char *) {} template <typename T, typename... V>void printer(const char *names, T &&head, V &&...tail) {int i = 0;for (size_t bracket = 0;/*####
*/names[i] != '\0' and(names[i] != ',' or bracket != 0); i++)if (names[i] == '(' or names[i] == '<' or names[i] == '{')bracket++;else if (names[i] == ')' or names[i] == '>' or names[i] == '}')/*#####
*/bracket--;cerr.write(names, i) << " = ";print(head);if (sizeof...(tail))cerr << " ||",printer(names + i + 1, tail...);else cerr << "]\n"; }void printerArr(const char *) {} /*#######################
*/template <typename T, typename... V>void printerArr(const char *names, T arr[], size_t N, V... tail) {size_t ind = 0;for (; names[ind] and names[ind] != ','; ind++)cerr << names[ind];/*############
*/for (ind++; names[ind] and names[ind] != ','; ind++) ;cerr << " = {";for (size_t i = 0; i < N; i++)cerr << (i ? "," : ""), print(arr[i]);cerr << "}";if (sizeof...(tail))cerr << " ||",/*############
*/printerArr(names + ind + 1, tail...);else cerr << "]\n"; } }/*########################################################################################################################################
*/
#ifndef ONLINE_JUDGE
#define debug(...) std::cerr << __LINE__ << ": [", __DEBUG_UTIL__::printer(#__VA_ARGS__, __VA_ARGS__)
#define debugArr(...) std::cerr << __LINE__ << ": [", __DEBUG_UTIL__::printerArr(#__VA_ARGS__, __VA_ARGS__)
#else
#define debug(...)
#define debugArr(...)
#endif
using namespace std;
const int MAXN = 100005;

int p, q, s_len;
string s;
vector<pair<pair<int, int>, int>> queries;
vector<int> results;

vector<int> b(MAXN + 1);
vector<long long> pref(MAXN + 1);

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    cin >> p >> s;
    s_len = s.size();

    cin >> q;
    queries.resize(q);
    results.resize(q);

    for (int i = 0; i < q; ++i) {
        int L, R;
        cin >> L >> R;
        queries[i] = {{L, R}, i};
    }

    if (p == 2 || p == 5) {
        vector<int> cnt(s.size() + 1), sum(s.size() + 1);
        for (int i = 1; i <= s.size(); i++) {
            cnt[i] = cnt[i - 1] + ((s[i - 1] - '0') % p == 0);
            sum[i] = sum[i - 1] + (i % p == 0 ? cnt[i] : 0);
        }

        for(int i = 0; i < q; i++) {
            int l = queries[i].first.first, r = queries[i].first.second;
            cout << sum[r] - sum[l - 1] - (l - 1) * (cnt[r] - cnt[l - 1]) << '\n';
        }
    } else {
        int n = s.size();
        long long ten_pow = 1;
        for (int i = n; i >= 1; --i) {
            b[i] = (s[i - 1] - '0') * ten_pow % p;
            ten_pow = ten_pow * 10 % p;
        }

        pref[0] = 0;
        for (int i = 1; i <= n; ++i) {
            pref[i] = (pref[i - 1] + b[i]) % p;
        }
        int block_size = sqrt(q);
        sort(queries.begin(), queries.end(), [block_size](const auto &a, const auto &b) {
            if (a.first.first / block_size != b.first.first / block_size)
                return a.first.first < b.first.first;
            return a.first.second < b.first.second;
        });

        vector<int> answer(q);
        unordered_map<int, int> count_map;
        int curr_L = 1, curr_R = 0; 

        for (const auto &query : queries) {
            int L = query.first.first;
            int R = query.first.second;
            int idx = query.second;
            while (curr_R < R) {
                curr_R++;
                count_map[pref[curr_R]]++;
            }
            while (curr_R > R) {
                count_map[pref[curr_R]]--;
                if (count_map[pref[curr_R]] == 0) {
                    count_map.erase(pref[curr_R]);
                }
                curr_R--;
            }
            while (curr_L < L) {
                count_map[pref[curr_L]]--;
                if (count_map[pref[curr_L]] == 0) {
                    count_map.erase(pref[curr_L]);
                }
                curr_L++;
            }
            while (curr_L > L) {
                curr_L--;
                count_map[pref[curr_L]]++;
            }

            answer[idx] = count_map[pref[L - 1]];
        }

        for (int i = 0; i < q; i++) {
            cout << answer[i] << "\n";
        }

    }

    return 0;
}